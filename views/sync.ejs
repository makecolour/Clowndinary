<div class="sync-container" ng-app="clowndinaryApp" ng-controller="SyncController">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1>
      <i class="fas fa-sync-alt me-2"></i>
      Sync to Bunny Storage
    </h1>
    <div>
      <a href="/sync/bunny-config" class="btn btn-outline-primary me-2">
        <i class="fas fa-cog me-2"></i>
        Bunny Config
      </a>
      <a href="/dashboard" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-2"></i>
        Dashboard
      </a>
    </div>
  </div>

  <% if (activeJobs && activeJobs.length > 0) { %>
    <div class="alert alert-warning" role="alert">
      <i class="fas fa-exclamation-triangle me-2"></i>
      <strong>Active Sync Job Running!</strong> Please wait for the current job to complete before starting a new one.
    </div>
  <% } %>

  <!-- Sync Form -->
  <div class="card sync-form-card mb-4">
    <div class="card-body">
      <h3 class="card-title">
        <i class="fas fa-play-circle me-2"></i>
        Start New Sync
      </h3>
      <p class="card-text mb-4">Sync files from Cloudinary to Bunny Storage within a specific date range.</p>
      
      <form method="POST" action="/sync/start" ng-submit="startSync($event)">
        <div class="date-inputs">
          <div class="form-group">
            <label class="form-label text-white" for="startDate">
              <i class="fas fa-calendar-day me-2"></i>
              Start Date
            </label>
            <input 
              type="date" 
              id="startDate" 
              name="startDate" 
              class="form-control" 
              required
              max="<%= new Date().toISOString().split('T')[0] %>"
            >
          </div>
          
          <div class="form-group">
            <label class="form-label text-white" for="endDate">
              <i class="fas fa-calendar-check me-2"></i>
              End Date
            </label>
            <input 
              type="date" 
              id="endDate" 
              name="endDate" 
              class="form-control" 
              required
              max="<%= new Date().toISOString().split('T')[0] %>"
            >
          </div>
          
          <div class="form-group">
            <button 
              type="submit" 
              class="btn btn-light btn-lg"
              ng-disabled="isSyncing || hasActiveJobs"
            >
              <i class="fas fa-sync-alt me-2" ng-class="{'fa-spin': isSyncing}"></i>
              <span ng-if="!isSyncing">Start Sync</span>
              <span ng-if="isSyncing">Syncing...</span>
            </button>
          </div>
        </div>
        
        <!-- Advanced Options (Collapsible) -->
        <div class="mt-4">
          <button 
            type="button" 
            class="btn btn-outline-light btn-sm" 
            data-bs-toggle="collapse" 
            data-bs-target="#advancedOptions"
            aria-expanded="false"
          >
            <i class="fas fa-cog me-2"></i>
            Advanced Retry Options
            <i class="fas fa-chevron-down ms-2"></i>
          </button>
          
          <div class="collapse mt-3" id="advancedOptions">
            <div class="card bg-light text-dark">
              <div class="card-body">
                <h6 class="card-title">
                  <i class="fas fa-tools me-2"></i>
                  Network & Retry Configuration
                </h6>
                <p class="card-text small mb-3">
                  Adjust these settings if you're experiencing network timeouts or connection issues.
                </p>
                
                <div class="row">
                  <div class="col-md-6">
                    <div class="form-group mb-3">
                      <label class="form-label" for="batchSize">
                        <i class="fas fa-layer-group me-2"></i>
                        Batch Size
                      </label>
                      <select id="batchSize" name="batchSize" class="form-control">
                        <option value="1">1 (Slowest, Most Reliable)</option>
                        <option value="2">2</option>
                        <option value="3" selected>3 (Recommended)</option>
                        <option value="5">5</option>
                        <option value="10">10 (Fastest, Least Reliable)</option>
                      </select>
                      <small class="form-text text-muted">Number of files processed simultaneously</small>
                    </div>
                    
                    <div class="form-group mb-3">
                      <label class="form-label" for="downloadRetries">
                        <i class="fas fa-redo me-2"></i>
                        Download Retries
                      </label>
                      <select id="downloadRetries" name="downloadRetries" class="form-control">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3" selected>3 (Recommended)</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                      </select>
                      <small class="form-text text-muted">Retry attempts for failed downloads</small>
                    </div>
                  </div>
                  
                  <div class="col-md-6">
                    <div class="form-group mb-3">
                      <label class="form-label" for="uploadRetries">
                        <i class="fas fa-upload me-2"></i>
                        Upload Retries
                      </label>
                      <select id="uploadRetries" name="uploadRetries" class="form-control">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3" selected>3 (Recommended)</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                      </select>
                      <small class="form-text text-muted">Retry attempts for failed uploads</small>
                    </div>
                    
                    <div class="form-group mb-3">
                      <label class="form-label" for="downloadTimeout">
                        <i class="fas fa-clock me-2"></i>
                        Download Timeout
                      </label>
                      <select id="downloadTimeout" name="downloadTimeout" class="form-control">
                        <option value="15000">15 seconds</option>
                        <option value="30000">30 seconds</option>
                        <option value="45000" selected>45 seconds (Recommended)</option>
                        <option value="60000">60 seconds</option>
                        <option value="90000">90 seconds</option>
                        <option value="120000">120 seconds</option>
                      </select>
                      <small class="form-text text-muted">Timeout for each download attempt</small>
                    </div>
                  </div>
                </div>
                
                <div class="alert alert-info small mt-3" role="alert">
                  <i class="fas fa-info-circle me-2"></i>
                  <strong>Tip:</strong> If you're experiencing "ETIMEDOUT" errors, try reducing the batch size to 1-2 and increasing the download timeout to 60-90 seconds.
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>
  </div>

  <!-- Active Jobs -->
  <div ng-if="activeJobs.length > 0" class="mb-4">
    <h3>
      <i class="fas fa-running me-2"></i>
      Active Jobs
    </h3>
    <div class="jobs-grid">
      <div class="job-card card" ng-repeat="job in activeJobs">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="card-title mb-0">
              <i class="fas fa-cog fa-spin me-2 text-primary"></i>
              Job #{{job.id}}
              <small class="text-muted ms-2">Active</small>
            </h5>
            <span class="job-status-badge" ng-class="'status-' + job.status">
              <i class="fas fa-circle-notch fa-spin me-1"></i>
              {{job.status.replace('_', ' ').toUpperCase()}}
            </span>
          </div>
          
          <div class="job-info-row mb-3">
            <div class="job-info-item">
              <i class="fas fa-calendar-range text-info me-2"></i>
              <span class="info-label">Date Range:</span>
              <span class="info-value">{{formatDateRange(job.start_date, job.end_date)}}</span>
            </div>
          </div>
          
          <div ng-if="job.total_files > 0" class="progress-section mb-3">
            <div class="d-flex justify-content-between align-items-center mb-2">
              <span class="text-muted">Progress</span>
              <span class="badge bg-primary">{{getProgress(job)}}%</span>
            </div>
            <div class="progress-container">
              <div class="progress-fill" ng-style="{'width': getProgress(job) + '%'}">
                <span class="progress-text">{{getProgress(job)}}%</span>
              </div>
            </div>
          </div>
          
          <div ng-if="job.total_files > 0" class="job-stats">
            <div class="stat-card">
              <div class="stat-icon">
                <i class="fas fa-files text-primary"></i>
              </div>
              <div class="stat-info">
                <div class="stat-value">{{job.total_files}}</div>
                <div class="stat-label">Total Files</div>
              </div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">
                <i class="fas fa-check-circle text-success"></i>
              </div>
              <div class="stat-info">
                <div class="stat-value">{{job.synced_files}}</div>
                <div class="stat-label">Synced</div>
              </div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">
                <i class="fas fa-times-circle text-danger"></i>
              </div>
              <div class="stat-info">
                <div class="stat-value">{{job.failed_files}}</div>
                <div class="stat-label">Failed</div>
              </div>
            </div>
          </div>
          
          <div class="mt-3">
            <a href="/sync/job/{{job.id}}" class="btn btn-primary btn-sm">
              <i class="fas fa-eye me-2"></i>
              View Details
            </a>
            <span class="text-muted ms-3">
              <i class="fas fa-clock me-1"></i>
              Running since {{formatDate(job.created_at)}}
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Recent Jobs -->
  <div class="mb-4">
    <h3>
      <i class="fas fa-history me-2"></i>
      Recent Sync Jobs
    </h3>
    
    <div ng-if="recentJobs.length > 0" class="jobs-grid">
      <div class="job-card card" ng-repeat="job in recentJobs">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="card-title mb-0">
              <i class="fas fa-file-alt me-2 text-secondary"></i>
              Job #{{job.id}}
              <small class="text-muted ms-2">{{getJobTypeLabel(job.status)}}</small>
            </h5>
            <span class="job-status-badge" ng-class="'status-' + job.status">
              <i class="fas" ng-class="getStatusIcon(job.status)"></i>
              {{job.status.replace('_', ' ').toUpperCase()}}
            </span>
          </div>
          
          <div class="job-info-grid mb-3">
            <div class="job-info-item">
              <i class="fas fa-calendar-range text-info me-2"></i>
              <span class="info-label">Range:</span>
              <span class="info-value">{{formatDateRange(job.start_date, job.end_date)}}</span>
            </div>
            <div class="job-info-item">
              <i class="fas fa-clock text-warning me-2"></i>
              <span class="info-label">Created:</span>
              <span class="info-value">{{formatDate(job.created_at)}}</span>
            </div>
          </div>
          
          <div ng-if="job.total_files > 0" class="job-stats mb-3">
            <div class="stat-card">
              <div class="stat-icon">
                <i class="fas fa-files text-primary"></i>
              </div>
              <div class="stat-info">
                <div class="stat-value">{{job.total_files}}</div>
                <div class="stat-label">Total</div>
              </div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">
                <i class="fas fa-check-circle text-success"></i>
              </div>
              <div class="stat-info">
                <div class="stat-value">{{job.synced_files}}</div>
                <div class="stat-label">Success</div>
              </div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">
                <i class="fas fa-times-circle text-danger"></i>
              </div>
              <div class="stat-info">
                <div class="stat-value">{{job.failed_files}}</div>
                <div class="stat-label">Failed</div>
              </div>
            </div>
            <div class="stat-card">
              <div class="stat-icon">
                <i class="fas fa-percentage text-info"></i>
              </div>
              <div class="stat-info">
                <div class="stat-value">{{getSuccessRate(job)}}%</div>
                <div class="stat-label">Success Rate</div>
              </div>
            </div>
          </div>
          
          <div ng-if="job.error_message" class="alert alert-danger mt-3" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>Error:</strong> {{job.error_message}}
          </div>
          
          <div class="d-flex justify-content-between align-items-center mt-3">
            <a href="/sync/job/{{job.id}}" class="btn btn-primary btn-sm">
              <i class="fas fa-eye me-2"></i>
              View Details
            </a>
            <div class="job-duration text-muted">
              <i class="fas fa-stopwatch me-1"></i>
              {{getJobDuration(job)}}
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div ng-if="recentJobs.length === 0" class="empty-state">
      <i class="fas fa-sync-alt"></i>
      <h4>No sync jobs yet</h4>
      <p>Start your first sync job using the form above.</p>
    </div>
  </div>
</div>

<script>
  angular.module('clowndinaryApp', []).controller('SyncController', function($scope, $timeout) {
    $scope.syncForm = {
      startDate: '',
      endDate: ''
    };
    
    $scope.isSyncing = false;
    $scope.hasActiveJobs = <%= typeof activeJobs !== 'undefined' && activeJobs && activeJobs.length > 0 ? 'true' : 'false' %>;
    
    $scope.activeJobs = <%- typeof activeJobs !== 'undefined' ? JSON.stringify(activeJobs) : '[]' %>;
    $scope.recentJobs = <%- typeof recentJobs !== 'undefined' ? JSON.stringify(recentJobs) : '[]' %>;
    
    // Set default dates
    $scope.setDefaultDates = function() {
      const today = new Date();
      const lastWeek = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);
      
      // Set values directly on DOM elements to avoid ng-model date format issues
      document.getElementById('startDate').value = lastWeek.toISOString().split('T')[0];
      document.getElementById('endDate').value = today.toISOString().split('T')[0];
    };
    
    $scope.startSync = function(event) {
      if ($scope.hasActiveJobs) {
        event.preventDefault();
        toastr.warning('Please wait for the current sync job to complete before starting a new one.');
        return false;
      }
      
      $scope.isSyncing = true;
      toastr.info('Starting sync job...');
    };
    
    $scope.getProgress = function(job) {
      if (job.total_files === 0) return 0;
      return Math.round(((job.synced_files + job.failed_files) / job.total_files) * 100);
    };
    
    $scope.formatDate = function(dateString) {
      return new Date(dateString).toLocaleString();
    };
    
    $scope.formatDateRange = function(startDate, endDate) {
      const start = new Date(startDate);
      const end = new Date(endDate);
      const options = { 
        year: 'numeric', 
        month: 'short', 
        day: 'numeric'
      };
      return start.toLocaleDateString('en-US', options) + ' - ' + end.toLocaleDateString('en-US', options);
    };
    
    $scope.getJobTypeLabel = function(status) {
      const labels = {
        'completed': 'Completed',
        'completed_with_errors': 'Completed with Errors',
        'failed': 'Failed',
        'pending': 'Pending',
        'running': 'Running'
      };
      return labels[status] || status;
    };
    
    $scope.getStatusIcon = function(status) {
      const icons = {
        'completed': 'fa-check-circle',
        'completed_with_errors': 'fa-exclamation-triangle',
        'failed': 'fa-times-circle',
        'pending': 'fa-clock',
        'running': 'fa-spinner fa-spin'
      };
      return icons[status] || 'fa-question-circle';
    };
    
    $scope.getSuccessRate = function(job) {
      if (job.total_files === 0) return 0;
      return Math.round((job.synced_files / job.total_files) * 100);
    };
    
    $scope.getJobDuration = function(job) {
      const start = new Date(job.created_at);
      const end = job.updated_at ? new Date(job.updated_at) : new Date();
      const duration = end - start;
      
      const seconds = Math.floor(duration / 1000);
      const minutes = Math.floor(seconds / 60);
      const hours = Math.floor(minutes / 60);
      
      if (hours > 0) {
        return hours + 'h ' + (minutes % 60) + 'm';
      } else if (minutes > 0) {
        return minutes + 'm ' + (seconds % 60) + 's';
      } else {
        return seconds + 's';
      }
    };
    
    // Auto-refresh if there are active jobs
    if ($scope.hasActiveJobs) {
      $timeout(function() {
        window.location.reload();
      }, 5000);
    }
    
    // Initialize default dates
    $scope.setDefaultDates();
    
    // Show success/error messages
    <% if (success) { %>
      toastr.success('<%- success %>');
    <% } %>
    <% if (error) { %>
      toastr.error('<%- error %>');
    <% } %>
  });
</script>
